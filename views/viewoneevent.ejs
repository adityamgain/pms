<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Details</title>
    <link rel="stylesheet" href="/css/viewoneevent.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="viewone-container">
        <h1><%= event.eventName %> - <%= event.eventType %></h1>

        <!-- Event Details Section -->
        <div class="event-details">
            <p>
                <stong><b>Event Outcome:</b></strong> <%= event.outcome %>
            </p>
            <!-- Start Date with Icon -->
            <p>
                <i class="fas fa-calendar-alt"></i>   <!-- Font Awesome calendar icon -->
                <strong>Start Date:</strong> <%= event.startDate.toISOString().slice(0, 10) %>
            </p>

            <!-- End Date with Icon -->
            <p>
                <i class="fas fa-calendar-alt"></i>   <!-- Font Awesome calendar icon -->
                <strong>End Date:</strong> <%= event.endDate.toISOString().slice(0, 10) %>
            </p>

            <!-- Venue with Icon -->
            <p>
                <i class="fas fa-map-marker-alt"></i>   <!-- Font Awesome map marker icon -->
                <%= event.venue 
                    ? event.venue.municipality + ', ' + event.venue.district + ', ' + event.venue.province 
                    : 'N/A' 
                %>
            </p>
        </div>

        <div class="facilitators">
            <h3>Facilitators</h3>
            <ul>
                <% event.facilitators.forEach(facilitator => { %>
                    <li>
                        <i class="fas fa-user"></i> <!-- Font Awesome user icon -->
                        <%= facilitator %>
                    </li>
                <% }) %>
            </ul>
        </div>

        <!-- Beneficiary Summary Table -->
        <h3>Beneficiary Summary</h3>
        <div class="summary-table-wrapper">
            <table class="summary-table">
                <thead>
                    <tr>
                        <th>Attendees</th>
                        <th>Male</th>
                        <th>Female</th>
                        <th>Organizations</th>
                        <th>Upto 25 Yrs</th>
                        <th>25-40 Yrs</th>
                        <th>40 above</th>
                        <th>Benefitted</th>
                        <th>Disability</th>
                        <th>Dalit</th>
                        <th>Tharu</th>
                        <th>Janajati</th>
                        <th>Brahman/Chhetri</th>
                        <th>Madhesi</th>
                        <th>OthersCaste</th>
                        <th>Poverty A</th>
                        <th>Poverty B</th>
                        <th>Poverty C</th>
                        <th>Poverty D</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><%= overview.totalAttendees %></td>
                        <td><%= overview.totalMale %></td>
                        <td><%= overview.totalFemale %></td>
                        <td><%= overview.totalOrganizations %></td>
                        <td><%= overview.totalUpto25 %></td>
                        <td><%= overview.total25To40 %></td>
                        <td><%= overview.totalabove40 %></td>
                        <td><%= overview.totalBenefitted %></td>
                        <td><%= overview.totalDisability %></td>
                        <td><%= overview.totalDalit %></td>
                        <td><%= overview.totalTharu %></td>
                        <td><%= overview.totalJanajati %></td>
                        <td><%= overview.totalBrahmanChhetri %></td>
                        <td><%= overview.totalMadhesi %></td>
                        <td><%= overview.totalOthersCaste %></td>
                        <td><%= overview.totalPovertyA %></td>
                        <td><%= overview.totalPovertyB %></td>
                        <td><%= overview.totalPovertyC %></td>
                        <td><%= overview.totalPovertyD %></td>
                    </tr>
                </tbody>
            </table>
        </div>

<!-- Graphical Representations -->
<h3>Event Analysis Graph</h3>
<div class="graph-wrapper">

    <!-- Gender Distribution Pie Chart -->
    <div class="graph-item">
        <canvas id="genderPieChart"></canvas>
    </div>

    <!-- Age Group Distribution Bar Graph -->
    <div class="graph-item">
        <canvas id="ageBarChart"></canvas>
    </div>

    <!-- Caste/Ethnicity Distribution Pie Chart -->
    <div class="graph-item">
        <canvas id="castePieChart"></canvas>
    </div>

    <!-- Poverty Status Distribution Bar Graph -->
    <div class="graph-item">
        <canvas id="povertyBarChart"></canvas>
    </div>

</div>

        <!-- Beneficiaries Table -->
        <h3>Beneficiaries</h3>            
        <button type="button" onclick="addBeneficiary()">Add Beneficiary</button>
        <table id="beneficiary-table" class="beneficiary-table">
            <thead>
                <tr>
                    <th>S.N.</th>
                    <th>Full Name</th>
                    <th>Organization</th>
                    <th>Organization Type</th>
                    <th>Gender</th>
                    <th>Age Group</th>
                    <th>Caste/Ethnicity</th>
                    <th>Poverty Status</th>
                    <th>Benefits from Activity</th>
                    <th>Disability</th>
                </tr>
            </thead>
            <tbody>
                <% event.beneficiaries.forEach((beneficiary, index) => { %>
                    <tr>
                        <td><%= index + 1 %></td>
                        <td><%= beneficiary.name %></td>
                        <td><%= beneficiary.associatedOrganization.name %></td>
                        <td><%= beneficiary.associatedOrganization.main %></td>
                        <td><%= beneficiary.gender %></td>
                        <td><%= beneficiary.age %></td>
                        <td><%= beneficiary.casteEthnicity %></td>
                        <td><%= beneficiary.povertyStatus %></td>
                        <td><%= beneficiary.benefitsFromActivity ? 'Yes' : 'No' %></td>
                        <td><%= beneficiary.disability ? 'Yes' : 'No' %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>

        <!-- Export Button -->
        <a href="/viewevent/<%= event._id %>?export=excel" class="export-link">Export to Excel</a>

        <!-- Map Section -->
        <h3>Location</h3>
        <div id="map" style="height: 380px; width: 100%;"></div>

        <!-- Edit and Delete Buttons -->
        <a href="/events/<%= event._id %>/edit">Edit</a>
        <a href="/events/delete/<%= event._id %>">Delete</a>

        <!-- Photographs Section -->
        <% if (event.photographs && event.photographs.length > 0) { %>
            <div class="photographs">
                <h3>Photographs</h3>
                <% event.photographs.forEach(photo => { %>
                    <img src="<%= photo %>" alt="Photograph" onclick="openLightbox('/<%= photo %>')">
                <% }) %>
            </div>
        <% } %>

        <!-- Reports Section -->
        <% if (event.reports && event.reports.length > 0) { %>
            <div class="event-reports">
                <h3>Reports</h3>
                <ul>
                    <% event.reports.forEach(report => { %>
                        <li>
                            <i class="fas fa-file-alt"></i>
                            <a href="<%= report %>" target="_blank" rel="noopener noreferrer">View Report</a>
                        </li>
                    <% }) %>
                </ul>
            </div>
        <% } %>


    <!-- Lightbox Section -->
    <div id="lightbox">
        <span id="close-lightbox">&times;</span>
        <span class="arrow arrow-left" onclick="changeImage(-1)">&#10094;</span>
        <span class="arrow arrow-right" onclick="changeImage(1)">&#10095;</span>
        <img id="lightbox-img" src="" alt="Full Screen Image">
    </div>

    <script src="/js/eventWbeneficiary.js"></script>

    <script>
document.addEventListener("DOMContentLoaded", () => {
    const lightbox = document.getElementById("lightbox");
    const lightboxImg = document.getElementById("lightbox-img");
    const closeLightbox = document.getElementById("close-lightbox");
    const leftArrow = document.querySelector(".arrow-left");
    const rightArrow = document.querySelector(".arrow-right");
    
    let images = [];
    let currentImageIndex = 0;

    // Function to open the lightbox
    function openLightbox(imageSrc, index) {
        images = Array.from(document.querySelectorAll(".photographs img")).map(img => img.src);
        currentImageIndex = index;
        lightboxImg.src = imageSrc;
        lightbox.style.display = "flex";
    }

    // Function to change images when clicking arrows
    function changeImage(step) {
        if (images.length === 0) return;
        currentImageIndex = (currentImageIndex + step + images.length) % images.length;
        lightboxImg.src = images[currentImageIndex];
    }

    // Add event listeners to all images in the photographs section
    document.querySelectorAll(".photographs img").forEach((img, index) => {
        img.addEventListener("click", () => openLightbox(img.src, index));
    });

    // Close lightbox when clicking the close button
    closeLightbox.addEventListener("click", () => {
        lightbox.style.display = "none";
    });

    // Close when clicking outside the image
    lightbox.addEventListener("click", (e) => {
        if (e.target === lightbox) {
            lightbox.style.display = "none";
        }
    });

    // Add event listeners for navigation arrows
    leftArrow.addEventListener("click", () => changeImage(-1));
    rightArrow.addEventListener("click", () => changeImage(1));

    // Keyboard navigation
    document.addEventListener("keydown", (e) => {
        if (lightbox.style.display === "flex") {
            if (e.key === "ArrowRight") changeImage(1);
            if (e.key === "ArrowLeft") changeImage(-1);
            if (e.key === "Escape") lightbox.style.display = "none";
        }
    });
});



        // Beneficiary Summary Data 
        const beneficiarySummary = {
            totalMale: <%= overview.totalMale %>,
            totalFemale: <%= overview.totalFemale %>,
            totalUpto25: <%= overview.totalUpto25 %>,
            total25To40: <%= overview.total25To40 %>,
            totalabove40: <%= overview.totalabove40 %>,
            totalDisability: <%= overview.totalDisability %>,
            totalDalit: <%= overview.totalDalit %>,
            totalTharu: <%= overview.totalTharu %>,
            totalJanajati: <%= overview.totalJanajati %>,
            totalBrahmanChhetri: <%= overview.totalBrahmanChhetri %>,
            totalMadhesi: <%= overview.totalMadhesi %>,
            totalOthersCaste: <%= overview.totalOthersCaste %>,
            totalPovertyA: <%= overview.totalPovertyA %>,
            totalPovertyB: <%= overview.totalPovertyB %>,
            totalPovertyC: <%= overview.totalPovertyC %>,
            totalPovertyD: <%= overview.totalPovertyD %>
        };

        // Pie Chart for Gender Distribution
        const genderPieChartCtx = document.getElementById('genderPieChart').getContext('2d');
        new Chart(genderPieChartCtx, {
            type: 'pie',
            data: {
                labels: ['Male', 'Female'],
                datasets: [{
                    label: 'Gender',
                    data: [beneficiarySummary.totalMale, beneficiarySummary.totalFemale],
                    backgroundColor: ['#36A2EB', '#FF6384'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Gender Distribution' }
                }
            }
        });

        // Bar Graph for Age Group Distribution
        const ageBarChartCtx = document.getElementById('ageBarChart').getContext('2d');
        new Chart(ageBarChartCtx, {
            type: 'bar',
            data: {
                labels: ['Upto 25 Years', '25-40 Years', '40+ Years'],
                datasets: [{
                    label: 'Age Group',
                    data: [
                        beneficiarySummary.totalUpto25,
                        beneficiarySummary.total25To40,
                        beneficiarySummary.totalabove40
                    ],
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false },
                    title: { display: true, text: 'Age Group' }
                },
                scales: { y: { beginAtZero: true } }
            }
        });

        // Pie Chart for Caste/Ethnicity Distribution
        const castePieChartCtx = document.getElementById('castePieChart').getContext('2d');
        new Chart(castePieChartCtx, {
            type: 'pie',
            data: {
                labels: ['Dalit', 'Tharu', 'Janajati', 'Brahman/Chhetri', 'Madhesi', 'Others'],
                datasets: [{
                    label: 'Caste/Ethnicity',
                    data: [
                        beneficiarySummary.totalDalit,
                        beneficiarySummary.totalTharu,
                        beneficiarySummary.totalJanajati,
                        beneficiarySummary.totalBrahmanChhetri,
                        beneficiarySummary.totalMadhesi,
                        beneficiarySummary.totalOthersCaste
                    ],
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { position: 'top' },
                    title: { display: true, text: 'Caste/Ethnicity Distribution' }
                }
            }
        });

        // Bar Graph for Poverty Status Distribution
        const povertyBarChartCtx = document.getElementById('povertyBarChart').getContext('2d');
        new Chart(povertyBarChartCtx, {
            type: 'bar',
            data: {
                labels: ['Poverty A', 'Poverty B', 'Poverty C', 'Poverty D'],
                datasets: [{
                    label: 'Poverty Status',
                    data: [
                        beneficiarySummary.totalPovertyA,
                        beneficiarySummary.totalPovertyB,
                        beneficiarySummary.totalPovertyC,
                        beneficiarySummary.totalPovertyD
                    ],
                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: { display: false },
                    title: { display: true, text: 'Poverty Status Distribution' }
                },
                scales: { y: { beginAtZero: true } }
            }
        });

        // Initialize the map with coordinates from event data
        var eventLocation = <%= JSON.stringify(event.location.coordinates) %>;
        var map = L.map('map').setView([eventLocation[1], eventLocation[0]], 13); // Lat, Lng
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);
        L.marker([eventLocation[1], eventLocation[0]]).addTo(map)
            .bindPopup("<b>Event Location</b><br>" + event.venue.municipality + ", " + event.venue.district)
            .openPopup();

        // Export table to Excel
        function exportTableToExcel() {
            var wb = XLSX.utils.book_new();
            var ws = XLSX.utils.table_to_sheet(document.getElementById('beneficiary-table'));
            XLSX.utils.book_append_sheet(wb, ws, 'Beneficiaries');
            XLSX.writeFile(wb, 'Beneficiaries.xlsx');
        }

        // Add event listener to the export button
        document.getElementById("export-btn").addEventListener("click", exportTableToExcel);




    </script>
</body>
</html>