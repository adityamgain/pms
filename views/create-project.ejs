<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Project</title>
    <style>
        .createproject-form {
            max-width: 800px;
            margin: 2rem auto;
            padding: 2rem;
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .createproject-form h1 {
            text-align: center;
            margin-bottom: 2rem;
            font-size: 2.5rem;
            color: #2c3e50;
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: #2c3e50;
            font-size: 1rem;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f9fafb;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            border-color: #4CAF50;
            outline: none;
            box-shadow: 0 0 5px rgba(76, 175, 80, 0.2);
            background: white;
        }

        .form-group textarea {
            resize: vertical;
            min-height: 100px;
        }

        .activity-item,
        .outcome-item {
            margin-bottom: 1rem;
            padding: 1rem;
            background: #e9ecef;
            border-radius: 8px;
            border: 1px solid #ced4da;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .add-btn,
        .remove-btn {
            padding: 0.7rem 1.4rem;
            border: none;
            border-radius: 5px;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .add-btn {
            background-color: #4CAF50;
            color: white;
            font-weight: 600;
        }

        .add-btn:hover {
            background-color: #45a049;
            transform: translateY(-2px);
        }

        .remove-btn {
            background-color: #f44336;
            color: white;
            font-weight: 400;
        }

        .remove-btn:hover {
            background-color: #e53935;
        }

        .submit-btn {
            width: 100%;
            padding: 1rem;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.2rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
        }

        .submit-btn:hover {
            background-color: #45a049;
            transform: translateY(-2px);
        }

        .checkbox-group label {
            display: block;
            margin-bottom: 0.5rem;
        }

        .checkbox-group input {
            margin-right: 0.5rem;
        }

.gantt-chart-container {
    margin-top: 1rem;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    overflow-x: auto;
    position: relative; /* Add position relative to the container */
}

.gantt-chart {
    display: table;
    width: 100%;
    min-width: max-content;
    border-collapse: collapse;
}

.chart-row {
    display: table-row;
}

.chart-cell {
    display: table-cell;
    padding: 12px;
    border: 1px solid #e2e8f0;
    text-align: center;
    vertical-align: middle;
}

.header-row {
    background-color: #f8fafc;
    font-weight: 600;
}

.header-cell {
    min-width: 120px;
}

.activity-cell {
    background-color: #f8fafc;
    text-align: left;
    font-weight: 500;
    width: 250px;
    max-width: 250px;
    min-width: 250px;
    word-wrap: break-word;
    word-break: break-word;
    hyphens: auto;
    line-height: 1.5;
    padding: 12px 16px;
    font-size: 0.95rem;
    white-space: pre-wrap;
    border-right: 2px solid #e2e8f0;

    position: sticky; /* Make the event name cell sticky */
    left: 0;          /* Stick to the left edge */
    z-index: 2;       /* Ensure it's above other cells */
    background-color: #f8fafc; /* Match background-color to row/cell background */
}

.activity-header {
    background-color: #f1f5f9;
    width: 250px;
    max-width: 250px;
    min-width: 250px;
    text-align: left;
    font-weight: 600;
    word-wrap: break-word;
    word-break: break-word;
    hyphens: auto;
    line-height: 1.5;
    padding: 12px 16px;
    font-size: 1rem;
    border-right: 2px solid #e2e8f0;

    position: sticky; /* Make the header cell sticky as well */
    left: 0;          /* Stick to the left edge */
    z-index: 3;       /* Ensure it's above other cells and activity cells */
    background-color: #f1f5f9; /* Match background-color to header background */
}


.event-cell {
    padding: 4px;
    width: 70px;
    min-width: 70px;
    vertical-align: middle;
}

.event-input {
    width: 100%;
    /* height: 30px;  Removed fixed height */
    padding: 0; /* Reduced padding to 0 */
    border: none; /* Removed border */
    border-radius: 0; /* Removed border-radius */
    text-align: center;
    font-size: 0.9rem;
    box-sizing: border-box;
    background: transparent; /* Make background transparent */
}

.time-unit-header {
    background-color: #f1f5f9;
    width: 70px;
    min-width: 70px;
    padding: 8px 4px;
}

.event-input:focus {
    border-color: #4CAF50;
    outline: none;
    box-shadow: none; /* Removed box-shadow on focus for cleaner look */
    background-color: rgba(76, 175, 80, 0.1); /* Optional: very light background on focus */
    border: 1px solid #4CAF50; /* Added border on focus to indicate focus */
    border-radius: 4px; /* Added border-radius on focus to match original style */
}

/* Target Input Styling */
.target-input {
    width: 100%;
    padding: 0; /* Reduced padding to 0, adjust if needed */
    border: none; /* Removed border */
    border-radius: 0; /* Removed border-radius */
    text-align: center;
    font-size: 0.9rem;
    box-sizing: border-box;
    background: transparent; /* Make background transparent */
    height: 100%;       /* Occupy full height of the cell */
    display: block;      /* Ensure full height */
}

.target-input:focus {
    border-color: #4CAF50;
    outline: none;
    box-shadow: none; /* Removed box-shadow on focus for cleaner look */
    background-color: rgba(76, 175, 80, 0.1); /* Optional: very light background on focus */
    border: 1px solid #4CAF50; /* Added border on focus to indicate focus */
    border-radius: 4px; /* Added border-radius on focus to match original style */
}/* Responsive adjustments */
@media (max-width: 768px) {
    .gantt-chart-container {
        margin: 1rem -1rem;
        border-radius: 0;
    }
    
    .header-cell {
        min-width: 100px;
    }
    
    .activity-header {
        min-width: 150px;
    }
}

    </style>
</head>
<body>
    <div class="createproject-form">
        <h1>Create a New Project</h1>
        <form action="/projects/createProject" method="POST">
            <div class="form-group">
                <label for="projectName">Project Name:</label>
                <input type="text" id="projectName" name="projectName" required>
            </div>
            <div class="form-group">
                <label for="donor">Donor:</label>
                <input type="text" id="donor" name="donor" required>
            </div>
            <div class="form-group">
                <label for="stakeholders">Stakeholders (comma-separated):</label>
                <input type="text" id="stakeholders" name="stakeholders" required>
            </div>
            <div class="form-group">
                <label for="startDate">Start Date:</label>
                <input type="date" id="startDate" name="startDate" required onchange="generateGanttChart()">
            </div>
            <div class="form-group">
                <label for="endDate">End Date:</label>
                <input type="date" id="endDate" name="endDate" required onchange="generateGanttChart()">
            </div>
            <div class="form-group">
                <label>Area of Action:</label>
                <div id="areaOfAction" class="checkbox-group">
                    <label><input type="checkbox" name="areaOfAction[]" value="Nature-based commercial agriculture"> Nature-based commercial agriculture</label>
                    <label><input type="checkbox" name="areaOfAction[]" value="Sustainable Forest Management"> Sustainable Forest Management</label>
                    <label><input type="checkbox" name="areaOfAction[]" value="Water"> Water</label>
                    <label><input type="checkbox" name="areaOfAction[]" value="Climate Change"> Climate Change</label>
                </div>
            </div>
            <div class="form-group">
                <label for="reportingPeriod">Reporting Period:</label>
                <select id="reportingPeriod" name="reportingPeriod" required onchange="generateGanttChart()">
                    <option value="Monthly">Monthly</option>
                    <option value="Quarterly">Quarterly</option>
                    <option value="Semi-Annually">Semi-Annually</option>
                    <option value="Annually">Annually</option>
                </select>
            </div>

            <div class="form-group">
                <label>Activities:</label>
                <div id="activities-container">
                    <div class="activity-item">
                        <input type="text" name="activities[]" placeholder="Enter activity name" required>
                        <button type="button" class="remove-btn" onclick="removeActivity(this)">Remove Activity</button>
                    </div>
                </div>
                <button type="button" class="add-btn" onclick="addActivity()">+ Add Activity</button>
            </div>
            <div class="form-group">
                <label>Outcomes:</label>
                <div id="outcomes-container">
                    <div class="outcome-item">
                        <input type="text" name="outcomes[]" placeholder="Enter outcome" required>
                        <button type="button" class="remove-btn" onclick="removeOutcome(this)">Remove Outcome</button>
                    </div>
                </div>
                <button type="button" class="add-btn" onclick="addOutcome()">+ Add Outcome</button>
            </div>

            <div class="form-group">
                <label>Gantt Chart - Planning Events:</label>
                <div id="gantt-chart-container" class="gantt-chart-container">
                    <!-- Gantt Chart will be dynamically inserted here -->
                </div>
            </div>

            <button type="submit" class="submit-btn">Create Project</button>
        </form>
    </div>

    <script>
        function addActivity() {
            const container = document.getElementById('activities-container');
            const div = document.createElement('div');
            div.className = 'activity-item';
            div.innerHTML = `
                <input type="text" name="activities[]" placeholder="Enter activity name" required>
                <button type="button" class="remove-btn" onclick="removeActivity(this)">Remove Activity</button>
            `;
            container.appendChild(div);
            generateGanttChart(); // Update Gantt chart when activities change
        }

        function removeActivity(button) {
            button.parentElement.remove();
            generateGanttChart(); // Update Gantt chart when activities change
        }

        function addOutcome() {
            const container = document.getElementById('outcomes-container');
            const div = document.createElement('div');
            div.className = 'outcome-item';
            div.innerHTML = `
                <input type="text" name="outcomes[]" placeholder="Enter outcome" required>
                <button type="button" class="remove-btn" onclick="removeOutcome(this)">Remove Outcome</button>
            `;
            container.appendChild(div);
        }

        function removeOutcome(button) {
            button.parentElement.remove();
        }

        function validatePositiveNumber(input) {
            if (input.value < 1) {
                input.value = "";
            }
        }

 function generateGanttChart() {
        const container = document.getElementById('gantt-chart-container');
        container.innerHTML = ''; // Clear existing chart

        const reportingPeriod = document.getElementById('reportingPeriod').value;
        const startDateInput = document.getElementById('startDate').value;
        const endDateInput = document.getElementById('endDate').value;
        const activityInputs = document.querySelectorAll('input[name="activities[]"]');
        const activities = Array.from(activityInputs).map(input => input.value);

        if (!startDateInput || !endDateInput || !reportingPeriod || activities.length === 0 || activities.every(activity => !activity)) {
            container.innerHTML = '<p>Please fill Start Date, End Date, Reporting Period and Activities to generate Gantt Chart.</p>';
            return;
        }

        const startDate = new Date(startDateInput);
        const endDate = new Date(endDateInput);

        if (startDate >= endDate) {
            container.innerHTML = '<p>End Date must be after Start Date.</p>';
            return;
        }

        let timeUnits = [];
        let currentDate = new Date(startDate);

        while (currentDate <= endDate) {
            let timeUnitLabel = '';
            let nextDate;

            if (reportingPeriod === 'Monthly') {
                timeUnitLabel = currentDate.toLocaleString('default', { month: 'short', year: 'numeric' });
                nextDate = new Date(currentDate);
                nextDate.setMonth(currentDate.getMonth() + 1);
            } else if (reportingPeriod === 'Quarterly') {
                const quarter = Math.floor(currentDate.getMonth() / 3) + 1;
                timeUnitLabel = `Q${quarter} ${currentDate.getFullYear()}`;
                nextDate = new Date(currentDate);
                nextDate.setMonth(currentDate.getMonth() + 3);
            } else if (reportingPeriod === 'Semi-Annually') {
                const semester = Math.floor(currentDate.getMonth() / 6) + 1;
                timeUnitLabel = `Semester ${semester} ${currentDate.getFullYear()}`;
                nextDate = new Date(currentDate);
                nextDate.setMonth(currentDate.getMonth() + 6);
            } else if (reportingPeriod === 'Annually') {
                timeUnitLabel = `${currentDate.getFullYear()}`;
                nextDate = new Date(currentDate);
                nextDate.setFullYear(currentDate.getFullYear() + 1);
            }

            timeUnits.push(timeUnitLabel);
            currentDate = nextDate;
        }

        if (timeUnits.length === 0) {
            container.innerHTML = '<p>No time units to display within the given date range and reporting period.</p>';
            return;
        }

        const chartDiv = document.createElement('div');
        chartDiv.className = 'gantt-chart';

        // Header Row
        const headerRow = document.createElement('div');
        headerRow.className = 'chart-row header-row';
        headerRow.innerHTML = `<div class="chart-cell header-cell activity-header">Activities</div>`;
        timeUnits.forEach(unit => {
            headerRow.innerHTML += `<div class="chart-cell header-cell time-unit-header">${unit}</div>`;
        });
        headerRow.innerHTML += `
            <div class="chart-cell header-cell target-header">Target</div>
            <div class="chart-cell header-cell units-header">Units</div>
        `; // Target and Units headers added here, outside timeUnits loop
        chartDiv.appendChild(headerRow);

        // Activity Rows
        activities.forEach(activity => {
            if (activity.trim() !== "") {
                const activityRow = document.createElement('div');
                activityRow.className = 'chart-row activity-row';
                activityRow.innerHTML = `<div class="chart-cell activity-cell">${activity}</div>`;
                timeUnits.forEach(unit => {
                    activityRow.innerHTML += `<div class="chart-cell event-cell"><input type="number" name="events[${activity}][${unit}]" min="0" value="0" class="event-input"></div>`;
                });
                // Target and Units input added here, outside timeUnits loop, for each activity
                activityRow.innerHTML += `
                    <div class="chart-cell target-cell"><input type="number" name="targets[${activity}]" min="0" value="" class="target-input"></div>
                    <div class="chart-cell units-cell">
                        <select name="units[${activity}]" class="units-select">
                            <option value="person">Person</option>
                            <option value="area">Area</option>
                            <option value="institution">Institution</option>
                            <option value="revenue">Revenue</option>
                        </select>
                    </div>
                `;
                chartDiv.appendChild(activityRow);
            }
        });

        container.appendChild(chartDiv);
    }

    // Initial Gantt Chart Generation on page load (if data is already filled - optional)
    generateGanttChart();    </script>
</body>
</html>