<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Details</title>
    <link rel="stylesheet" href="/css/project-detail.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <!-- dhtmlxGantt CSS -->
    <link rel="stylesheet" href="https://cdn.dhtmlx.com/gantt/edge/dhtmlxgantt.css">
    <!-- dhtmlxGantt JS -->
    <script src="https://cdn.dhtmlx.com/gantt/edge/dhtmlxgantt.js"></script>
</head>
<body>
    <div class="project-detail-container">
        <!-- Status Badge in Top-Left Corner -->
        <div class="status-badge <%= project.projectStatus.toLowerCase() %>">
            <%= project.projectStatus %>
        </div>
        
        <h1><%= project.projectName %></h1>
        <div class="section">
            <h2>Project Information</h2>
            <p><strong>Name:</strong> <%= project.projectName %></p>
            <p><strong>Donor:</strong> <%= project.donor %></p>
            <p><strong>Stakeholders:</strong> <%= project.stakeholders.join(', ') %></p>
            <p><strong>Start Date:</strong> <%= new Date(project.startDate).toDateString() %></p>
            <p><strong>End Date:</strong> <%= new Date(project.endDate).toDateString() %></p>
            <p><strong>Area of Action:</strong> <%= project.areaOfAction.join(', ') %></p>
            <p><strong>Reporting Period:</strong> <%= project.reportingPeriod %></p>

            <!-- Countdown Timer -->
            <p><strong>Time Remaining:</strong> <span id="countdown"></span></p>

            <section class="counting">
                <div class="layout">  
                    <div class="grid-3">
                        <span class="counter"><%= totalEvents %> </span>
                        <p>Events Completed</p>
                    </div>
                    <div class="grid-3">
                        <span class="counter"><%= targetevent %></span>
                        <p>Total Events To Be Held</p>
                    </div>
                    <div class="grid-3">
                        <span class="counter"><%= totalAttendees %></span>
                        <p>Total Beneficiaries</p>
                    </div>
                    <div class="grid-3">
                        <span class="counter"><%= EventsPercent %> %</span>
                        <p>Completion Ratio</p>
                    </div>
                </div>  
            </section>
            
            <a href="/projects/<%= project._id %>/export" class="btn" id="exportBtn">Export Project Details</a>

            <% if (totalEvents > 0) { %>
                <div class="graphical-representation">
                    <h2>Graphical Representation</h2>
                    <div class="chart-grid">
                        <!-- Event by Type -->
                        <div class="chart-container">
                            <h4>Event Type</h4>
                            <canvas id="eventTypeChart"></canvas>
                        </div>

                        <!-- Gender Distribution -->
                        <div class="chart-container">
                            <h4>Gender</h4>
                            <canvas id="genderChart"></canvas>
                        </div>

                        <!-- Caste/Ethnicity Breakdown -->
                        <div class="chart-container">
                            <h4>Caste/Ethnicity</h4>
                            <canvas id="casteChart"></canvas>
                        </div>

                        <!-- Age Group Distribution -->
                        <div class="chart-container">
                            <h4>Age Group </h4>
                            <canvas id="ageChart"></canvas>
                        </div>
                    </div>
                </div>
            <% } %>
            <div class="chart-container-grantt">
                <h4>Gantt Chart</h4>
                <div id="gantt_here" style="width: 100%; height: 400px;"></div>
            </div>
        </div>

        <a href="/projects/<%= project._id %>/eventb" class="btn">Add Event</a>
        <a href="/projects/<%= project._id %>/event-list" class="btn">View Events</a>
        <form action="/projects/<%= project._id %>?_method=DELETE" method="POST" onsubmit="return confirm('Are you sure you want to delete this project?');">
            <button type="submit" class="btn delete-btn">Delete Project</button>
        </form>
    </div>

    <% if (eventTypes.length > 0) { %>
        <script>
            // Get the event data from the server
            const eventTypes = <%- eventTypes %>;
            const eventCounts = <%- eventCounts %>;

            // Get the gender data
            const totalMale = <%= totalMale %>;
            const totalFemale = <%= totalFemale %>;
            const totalOther = <%= totalOther %>;

            // Get the caste/ethnicity data
            const totalDalit = <%= totalDalit %>;
            const totalJanajati = <%= totalJanajati %>;
            const totalBrahminChhetri = <%= totalBrahminChhetri %>;
            const totalTharu = <%= totalTharu %>;
            const totalMadhesi = <%= totalMadhesi %>;
            const totalOthers = <%= totalOthers %>;

            // Get the age group data
            const ageUnder25 = <%= ageUnder25 %>;
            const age25to40 = <%= age25to40 %>;
            const ageAbove40 = <%= ageAbove40 %>;

            // Event Type Chart (Pie Chart)
            new Chart(document.getElementById('eventTypeChart').getContext('2d'), {
                type: 'pie',
                data: {
                    labels: eventTypes,
                    datasets: [{
                        data: eventCounts,
                        backgroundColor: ['#D3D6C2', '#b9be9d', '#9fa578', '#81875A', '#696E49', '#525639']
                    }]
                }
            });

            // Gender Distribution Chart (Pie Chart)
            new Chart(document.getElementById('genderChart').getContext('2d'), {
                type: 'pie',
                data: {
                    labels: ['Male', 'Female', 'Other'],
                    datasets: [{
                        data: [totalMale, totalFemale, totalOther],
                        backgroundColor: ['#D28A74', '#ebcbc1', '#6c3423']
                    }]
                }
            });

            // Caste/Ethnicity Breakdown Chart (Pie Chart)
            new Chart(document.getElementById('casteChart').getContext('2d'), {
                type: 'pie',
                data: {
                    labels: ['Dalit', 'Janajati', 'Brahman/Chhetri', 'Tharu', 'Madhesi', 'Others'],
                    datasets: [{
                        data: [totalDalit, totalJanajati, totalBrahminChhetri, totalTharu, totalMadhesi, totalOthers],
                        backgroundColor: ['#D8E9E5', '#A4CCC2', '#7CB6A7', '#51907F', '#3B685C', '#2ecc71']
                    }]
                }
            });

            // Age Group Distribution Chart (Pie Chart)
            new Chart(document.getElementById('ageChart').getContext('2d'), {
                type: 'pie',
                data: {
                    labels: ['Under 25', '25-40', 'Above 40'],
                    datasets: [{
                        data: [ageUnder25, age25to40, ageAbove40],
                        backgroundColor: ['#EDDEA4', '#E4CE77', '#ffe66d']
                    }]
                }
            });
        </script>
    <% } %>

    <script>
        const endDate = new Date("<%= project.endDate.toISOString() %>");
        const countdownElement = document.getElementById('countdown');

        const countdownInterval = setInterval(() => {
            const now = new Date();
            let timeRemaining = endDate - now;

            if (timeRemaining <= 0) {
                clearInterval(countdownInterval);
                countdownElement.textContent = "Project has ended";
                return;
            }

            // Convert remaining time to years, months, and days
            const totalDays = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));

            const years = Math.floor(totalDays / 365);
            const remainingDaysAfterYears = totalDays % 365;

            const months = Math.floor(remainingDaysAfterYears / 30);
            const days = remainingDaysAfterYears % 30;

            countdownElement.textContent = `${years} years, ${months} months, ${days} days remaining`;
        }, 1000);
    </script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const reportingPeriod = "<%= reportingPeriod %>".trim();
    const ganttData = <%- ganttData || "[]" %>;

    console.log("Gantt Data:", ganttData);

    const ganttContainer = document.getElementById("gantt_here");
    if (!ganttContainer) {
        console.error("Gantt chart container not found");
        return;
    }

    gantt.config.date_format = "%Y-%m-%d";

    function updateGanttScale(period) {
        let scales = [{ unit: "day", step: 1, format: "%d %M" }];

        if (period === "Monthly") {
            scales = [
                { unit: "month", step: 1, format: "%F %Y" },
                { unit: "week", step: 1, format: "Week %W" }
            ];
        } else if (period === "Quarterly") {
            scales = [
                {
                    unit: "quarter", step: 1,
                    format: function (date) {
                        return `Q${Math.ceil((date.getMonth() + 1) / 3)} ${date.getFullYear()}`;
                    }
                }
            ];
        } else if (period === "Semi-Annually") {
            scales = [
                {
                    unit: "half-year", step: 1,
                    format: function (date) {
                        return (date.getMonth() < 6 ? "H1" : "H2") + ` ${date.getFullYear()}`;
                    }
                }
            ];
        } else if (period === "Annually") {
            scales = [{ unit: "year", step: 1, format: "%Y" }];
        }

        gantt.config.scales = scales;
    }

    gantt.config.open_tree_initially = true; // Expand all tasks by default
    gantt.config.order_branch = true; // Order tasks properly

    updateGanttScale(reportingPeriod);
    gantt.init("gantt_here");
    gantt.parse({ data: ganttData });

    if (!window.gantt) {
        console.error("Gantt chart failed to initialize");
    }
});
</script>

</body>
</html>